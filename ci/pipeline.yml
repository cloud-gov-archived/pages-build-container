---
############################
#  SHARED

env-cf: &env-cf
  CF_API: https://api.fr.cloud.gov
  CF_USERNAME: ((((deploy-env))-cf-username))
  CF_PASSWORD: ((((deploy-env))-cf-password))
  CF_ORG: gsa-18f-federalist
  CF_SPACE: ((deploy-env))

############################
#  JOBS

jobs:

  - name: set-pipeline
    serial: true
    plan:
      - get: src
        resource: src-((deploy-env))
        params: {depth: 1}
        trigger: true
      - set_pipeline: build-container
        file: src/ci/pipeline.yml
        instance_vars:
          deploy-env: ((deploy-env))
          git-branch: ((git-branch))

  - name: test-pr-((git-branch))
    plan:
      - get: src
        resource: pr-((git-branch))
        trigger: true
        version: every

      - put: src
        resource: pr-((git-branch))
        params:
          path: src
          status: pending
          base_context: concourse
          context: test-pages-build-container-((deploy-env))

      - get: python
      - task: test
        image: python
        file: src/ci/partials/test.yml

    on_failure:
      put: src
      resource: pr-((git-branch))
      params:
        path: src
        status: failure
        base_context: concourse
        context: test-pages-build-container-((deploy-env))

    on_success:
      put: src
      resource: pr-((git-branch))
      params:
        path: src
        status: success
        base_context: concourse
        context: test-pages-build-container-((deploy-env))

  - name: test-((deploy-env))
    plan:
      - get: src
        resource: src-((deploy-env))
        trigger: true
        params: {depth: 1}
      - get: python
      - task: test
        image: python
        file: src/ci/partials/test.yml

    on_failure:
      put: slack
      params:
        text: |
          :x: FAILED: pages build container tests on ((deploy-env))
          <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: ((slack-channel))
        username: ((slack-username))
        icon_url: ((slack-icon-url))

  - name: deploy-((deploy-env))
    plan:
      - get: src
        resource: src-((deploy-env))
        trigger: true
        params: {depth: 1}
        passed: [test-((deploy-env))]
      - get: cf-image
      - get: oci-build-task
      - task: build
        privileged: true
        image: oci-build-task
        file: src/ci/partials/build.yml
      - put: image-repository
        params:
          image: image/image.tar
      - task: deploy
        image: cf-image
        file: src/ci/partials/deploy.yml
        params:
          <<: *env-cf
          CF_APP_NAME: pages-build-container-((deploy-env))
          CF_MANIFEST: .cloudgov/manifest.yml
          CF_VARS_FILE: .cloudgov/vars/pages-((deploy-env)).yml
          IMAGE_REPOSITORY: ../image-repository/repository
          IMAGE_TAG: pages-((deploy-env))
          CF_DOCKER_USERNAME: ((ecr-aws-key))
          CF_DOCKER_PASSWORD: ((ecr-aws-secret))

    on_success:
      put: slack
      params:
        text: |
          :white_check_mark: SUCCESS: Successfully deployed pages build containers on ((deploy-env))
          <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: ((slack-channel))
        username: ((slack-username))
        icon_url: ((slack-icon-url))

    on_failure:
      put: slack
      params:
        text: |
          :x: FAILED: pages build container deployment on ((deploy-env))
          <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: ((slack-channel))
        username: ((slack-username))
        icon_url: ((slack-icon-url))

  - name: nightly-((deploy-env))
    plan:
      - get: nightly
        trigger: true
      - get: src
        resource: src-((deploy-env))
        trigger: true
        params: {depth: 1}
      - get: cf-image
      - task: restage
        image: cf-image
        file: src/ci/partials/restage.yml
        params:
          <<: *env-cf
          CF_APP_NAME: pages-build-container-((deploy-env))
    on_success:
      put: slack
      params:
        text: |
          :white_check_mark: SUCCESS: pages build container nightly restage on ((deploy-env))
          <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: ((slack-channel))
        username: ((slack-username))
        icon_url: ((slack-icon-url))
    on_failure:
      put: slack
      params:
        text: |
          :x: FAILED: pages build container nightly restage on ((deploy-env))
          <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: ((slack-channel))
        username: ((slack-username))
        icon_url: ((slack-icon-url))

  - name: audit-dependencies
    plan:
      - get: src
        resource: src-((deploy-env))
        trigger: true
        passed: [set-pipeline]

      - get: python
      - task: pip-audit
        image: python
        file: src/ci/partials/audit.yml

    on_failure:
        put: slack
        params:
          text: |
            :x: FAILED: pages build container dependency audit on ((deploy-env))
            <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME?vars.deploy-env="((deploy-env))"&vars.git-branch="((git-branch))"|View build details>
          channel: ((slack-channel))
          username: ((slack-username))
          icon_url: ((slack-icon-url))

    on_success:
      in_parallel:
        put: slack
        params:
          text: |
            :white_check_mark: SUCCESS: Successfully passed pages build container dependency audit on ((deploy-env))
          channel: ((slack-channel))
          username: ((slack-username))
          icon_url: ((slack-icon-url))

############################
#  RESOURCES

resources:

  - name: src-((deploy-env))
    type: git
    icon: github
    source:
      uri: ((git-base-url))/((build-container-repository-path))
      branch: ((git-branch))
      commit_verification_keys: ((cloud-gov-pages-gpg-keys))

  - name: pr-((git-branch))
    type: pull-request
    check_every: 1m
    source:
      repository: ((build-container-repository-path))
      access_token: ((gh-access-token))
      base_branch: ((git-branch))
      disable_forks: true
      ignore_drafts: false

  - name: nightly
    type: time
    source:
      start: 12:00 AM
      stop: 1:00 AM
      location: America/New_York

  - name: slack
    type: slack-notification
    source:
      url: ((slack-webhook-url))

  - name: image-repository
    type: registry-image
    source:
      aws_access_key_id: ((ecr-aws-key))
      aws_secret_access_key: ((ecr-aws-secret))
      repository: pages-build-container
      aws_region: us-gov-west-1
      tag: pages-((deploy-env))

  - name: python
    type: registry-image
    source:
      aws_access_key_id: ((ecr-aws-key))
      aws_secret_access_key: ((ecr-aws-secret))
      repository: pages-python-v3.11
      aws_region: us-gov-west-1
      tag: latest

  - name: cf-image
    type: registry-image
    source:
      aws_access_key_id: ((ecr-aws-key))
      aws_secret_access_key: ((ecr-aws-secret))
      repository: general-task
      aws_region: us-gov-west-1
      tag: latest

  - name: oci-build-task
    type: registry-image
    source:
      aws_access_key_id: ((ecr-aws-key))
      aws_secret_access_key: ((ecr-aws-secret))
      repository: oci-build-task
      aws_region: us-gov-west-1
      tag: latest

############################
#  RESOURCE TYPES

resource_types:

  - name: git
    type: registry-image
    source:
      aws_access_key_id: ((ecr_aws_key))
      aws_secret_access_key: ((ecr_aws_secret))
      repository: git-resource
      aws_region: us-gov-west-1
      tag: latest

  - name: slack-notification
    type: registry-image
    source:
      aws_access_key_id: ((ecr_aws_key))
      aws_secret_access_key: ((ecr_aws_secret))
      repository: slack-notification-resource
      aws_region: us-gov-west-1
      tag: latest

  - name: pull-request
    type: registry-image
    source:
      aws_access_key_id: ((ecr_aws_key))
      aws_secret_access_key: ((ecr_aws_secret))
      repository: github-pr-resource
      aws_region: us-gov-west-1
      tag: latest

  - name: time
    type: registry-image
    source:
      aws_access_key_id: ((ecr_aws_key))
      aws_secret_access_key: ((ecr_aws_secret))
      repository: time-resource
      aws_region: us-gov-west-1
      tag: latest

  - name: registry-image
    type: registry-image
    source:
      aws_access_key_id: ((ecr_aws_key))
      aws_secret_access_key: ((ecr_aws_secret))
      repository: registry-image-resource
      aws_region: us-gov-west-1
      tag: latest
